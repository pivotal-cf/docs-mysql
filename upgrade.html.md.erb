---
title: Upgrading VMware SQL with MySQL for Tanzu Application Service
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic explains how to upgrade the <%= vars.product_full %> service and existing service instances.
It also explains the service interruptions that can result from service changes and upgrades and from
failures at the process, VM, and IaaS level.

<%= partial vars.path_to_partials + '/upgrade-planner' %>

## <a id="upgrade-service"></a>Upgrade <%= vars.product_short %>

To upgrade the <%= vars.product_short %> service, follow the <%= vars.ops_manager %> process that you
use to install the service for the first time.
Your configuration settings migrate to the new version automatically.

To upgrade <%= vars.product_short %>:

1. Review the [Release Notes](./release-notes.html) for the version you are upgrading to.

1. Download the Ubuntu Jammy stemcell from
[<%= vars.product_network %>](https://network.tanzu.vmware.com/products/stemcells-ubuntu-jammy/),
and import it into the <%= vars.ops_manager %> Stemcell Library.
For instructions, see [Verify stemcell version and apply all changes](./install-config.html#stemcell).

1. Download the desired version of the product from
[<%= vars.product_network %>](https://network.tanzu.vmware.com/products/pivotal-mysql/).

1. Go to the <%= vars.ops_manager %> Installation Dashboard and
click **Import a Product** to upload the product file.

1. Under the **Import a Product** button, click **+** next to **<%= vars.product_short %>**.
This adds the tile to your staging area.

1. Click the newly-added **<%= vars.product_short %>** tile to review its configuration panes.
Click **Save** on any panes where you make changes.
    <p> To decrease the runtime for service instance upgrades,
      configure the <code>upgrade-all-service-instances</code> errand in the tile.
      For instructions about configuring this errand,
      see <a href="./install-config.html#service-instance-upgrades">Configure service instance upgrades</a>.

    </p>

1. (Optional) If you want developers to individually upgrade service instances, go to
to the **Errands** pane and select **Off** for **Upgrade all On-demand MySQL Service Instances**.
<br><br>
By default, the `upgrade-all-service-instances` errand runs after each upgrade.
For more information, see
[About individual service instance upgrades](#individual-upgrades).

>**Important**
> As of <%= vars.product_short %> v3.2.0, only MySQL 8.0 is supported. When upgrading, you must update any plans
> _previously configured_ with a "MySQL Default Version" of "5.7", and specify "8.0". On upgrade, all previously
> created MySQL v5.7 service instances are updated to MySQL v8.0, either when the platform operator runs the
> [upgrade-all-service-instances](./errands.html#upgrade-all-service-instances) errand or when the developer
> [individually upgrades a service instance](./use.html#upgrade-an-individual-service-instance) using the cf
> CLI.

1. Go to **<%= vars.ops_manager %> Dashboard** > **Review Pending Changes**.
For more information about this <%= vars.ops_manager %> page,
see [Reviewing pending product changes](https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/3.0/vmware-tanzu-ops-manager/install-review-pending-changes.html).

1. For the <%= vars.product_short %> tile, enable the **Register On-demand MySQL Broker** errand if the errand is not already enabled.

1. Click **Apply Changes**.

Upgrading the <%= vars.product_short %> service and service instances can temporarily interrupt
the service.
For more information, see [Service interruptions](#interruptions).

### <a id="individual-upgrades"></a> About individual service instance upgrades

<p class="note important">
<span class="note__title">Important</span>
To allow developers to upgrade individual service
instances, you must use <%= vars.app_runtime_full %> v2.7 or later.
</p>

After you upgrade the <%= vars.product_short %> tile, existing service instances must be upgraded to
use the latest version of the tile.
Developers cannot create new bindings to service instances that have not been upgraded.

Tile versions 3.2 and later only support MySQL 8.0. The version dropdown only lists 8.0 - but may show
a blank version on plans previously configured for MySQL 5.7. You must select 8.0 from the dropdown
before you can update these plans' service instances. (This forced manual selection prevents you from
accidentally upgrading your users from 5.7 to 8.0.)

<img src="../images/mysql-8.0-dropdown.png" alt="MySQL 8.0 version dropdown">

Note:
- If you change a plan's MySQL version from 5.7 to 8.0, then any subsequent updates to a service instance
  created with that plan will effect an upgrade of that instance's MySQL from 5.7 to 8.0. This includes
  both batch updates to all service instances via the "upgrade-all-service-instances" errand, and also
  individual service instance updates via a "cf update-service --upgrade" command.
  to a service instance created with that plan
- Plans may only be upgraded, downgrades are not supported. If you change an existing plan's
  MySQL 8.0 to 5.7, you may "apply changes" to save the plan modification, but any attempts to update
  plan service instances will fail with a message indicating that a downgrade was attempted.

- To decrease runtime for service instance upgrades, developers can individually upgrade
  on-demand service instances using the Cloud Foundry Command Line Interface (cf CLI).
  Developers can upgrade individual service instances by following the procedure in
  [Upgrade an Individual Service Instance](./use.html#single).

Developers can only upgrade individual service instances if you deactivate the `upgrade-all-service-instances`
errand when upgrading the tile.
By default, <%= vars.product_short %> runs this errand when you upgrade the tile.
However, this operation can take a long time.
You must also ensure that the `register-broker` errand is run during upgrades.
For more information about the `register broker` errand, see [register-broker](./errands.html#register-broker).

## <a id="interruptions"></a>Service interruptions

Service changes, upgrades, and failures at the process, VM, and IaaS level can cause outages
in the <%= vars.product_short %> service.

Read this section if:

+ You are planning an upgrade.
+ You are experiencing a service interruption and are wondering why.
+ You are planning to update or change a service instance and want to know if it might cause a service interruption.

### <a id='service-update'></a>Stemcell or service update

An operator updates a stemcell version or their version of <%= vars.product_short %>.

- <strong>Impact:</strong> Apps lose access to the MySQL service while <%= vars.ops_manager %>
 updates the service instance they are bound to.
          The service resumes within 10–15 minutes.
- <strong>Required Actions:</strong> None. If the update deploys successfully, apps reconnect automatically.

### <a id='change-plan'></a>Plan change

A developer changes their service instance to provide a different service plan, using `cf update-service` or Apps Manager.

 For example:

```
cf update-service SERVICE-INSTANCE -p NEW-PLAN
```

- <strong>Impact:</strong> Apps lose access to the MySQL service while <%= vars.ops_manager %>
updates the service instance they are bound to.
          The service resumes within 10–15 minutes.
- <strong>Required Actions:</strong> None. If the plan change deploys successfully,
the apps reconnect automatically.

### <a id='upgrade-interruption'></a>Service broker deployments

Automated backups are not taken during service broker deployments.

When the service broker is unavailable, such as during upgrades and re-deployments,
automated backups fail.
Automated backups resume according to schedule when the service broker is online again.

For general information about backups, see [Backing up and restoring <%= vars.product_full %>](backup-restore.html)
and [Configuring automated backups](automated-backup.html).
