---
title: Using management tools for VMware SQL with MySQL for Tanzu Application Service
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic provides you with the instructions to use for
accessing  <%= vars.product_full %> databases.

You can access your <%= vars.product_short %> databases by using the following tools:

+ [MySQLWeb Database Management App](#mysqlweb).
+ [cf CLI MySQL Plug-in](#plugin).
+ [Desktop Tools](#desktop).

## <a id="mysqlweb"></a>MySQLWeb Database management app

The MySQLWeb app provides a web UI for managing <%= vars.product_short %> databases.
The free app lets you view and operate on tables, indexes, constraints, and other database structures,
and directly run SQL commands.

![alt-text="The MySQLWeb app interface, with the 'SQL Worksheet' tab active."](./images/mysqlweb.png)

You can run the MySQLWeb app in the following ways:

* Standalone on your own machine.
* Deployed to <%= vars.ops_manager %>.

If you deploy MySQLWeb to <%= vars.ops_manager %>, you can configure it in the deployment manifest to automatically
bind to a specific service instance.

See the MySQLWeb [code repo](https://github.com/pivotal-cf/PivotalMySQLWeb)
for how to install and run MySQLWeb.

## <a id="plugin"></a>cf CLI MySQL Plug-in

To connect to your <%= vars.product_short %> databases from a command line, use the cf CLI MySQL plug-in.
The plug-in lets you:

* Inspect databases for debugging.
* Manually adjust database schema or contents in development environments.
* Dump and restore databases.

To install the cf CLI MySQL plug-in, run the following:

<pre class="terminal">
$ cf install-plugin -r "CF-Community" mysql-plugin
</pre>

For more information, see the [cf-mysql-plugin](https://github.com/andreasf/cf-mysql-plugin) repository.

## <a id="desktop"></a> Desktop Tools

You can connect your <%= vars.product_short %> databases to a desktop tool. For example, MySQL Workbench
or Sequel Pro, if you have the credentials for your MySQL service instance.

If you do not have credentials for your MySQL service instance, follow the procedure in
[Creating read-only access credentials](././customize-access.html).

To connect your databases to a desktop tool do the following:

1. To retrieve the credentials from your MySQL service instance service key, run the following
command:

    ```
    cf service-key SERVICE-INSTANCE MYSQL-SERVICE-KEY
    ```
    Where:

      * `SERVICE-INSTANCE` is the name of your service instance.
      * `KEY-NAME` is the name of your service key.

    For example:

    <pre class="terminal">
      $ cf service-key mydb mykey1<br>
      {
        "hostname": "q-n3s3y1.q-g693.bosh",
        "jdbcUrl": "jdbc:mysql<span>://</span>q-n3s3y1.q-g693.bosh:3306/service_instance_db?user=6bf07ae455a14064a9073cec8696366c\u0026password=a22aaa2a2a2aaaaa\u0026=true",
        "name": "service\_instance\_db",
        "password": "a22aaa2a2a2aaaaa",
        "port": 3306,
        "uri": "mysql<span>://</span>6bf07ae455a14064a9073cec8696366c:a22aaa2a2a2aaaaa<span>@</span>q-n3s3y1.q-g693.bosh:3306/service_instance_db?reconnect=true",
        "username": "6bf07ae455a14064a9073cec8696366c"
      }
    </pre>

   <p class="note caution">
    <span class="note__title">Caution</span> Version 8 of the cf-cli has a different response than lesser versions of cf-cli.
    Version 8 of the cf-cli has a top-level `credentials` key. Lesser versions of the cf-cli do not have a top-level `credentials` key.
   </p>

1. Record the values for the following:
    * `hostname`
    * `name`
    * `password`
    * `port`
    * `username`

1. Configure an SSH tunnel using the values for `hostname` and `port` that you recorded in the previous step.
   For information on configuring an SSH tunnel,
   see [Configure your SSH tunnel](https://docs.pivotal.io/application-service/devguide/deploy-apps/ssh-services.html#ssh-tunnel).

1. Configure a connection in your desktop tool using the values for `hostname`, `name`, `password`, `port`, and `username` that you recorded in the previous step.
